version: "3.9"
services:
  # Min.io (https://github.com/minio/minio)
  minio:
    image: quay.io/minio/minio:RELEASE.2024-11-07T00-52-20Z.hotfix.2e4a5c31f
    container_name: goistor-minio
    command: server /data --console-address ":9001"
    environment:
      PUID: ${PUID_NAS:-1000}
      PGID: ${PGID_NAS:-1000}
      TZ: ${TZ:-America/Los_Angeles}
      MINIO_ROOT_USER: ${GOISTOR_MINIO_USER:-changeMe}
      MINIO_ROOT_PASSWORD: ${GOISTOR_MINIO_PASSWORD:-changeMe}
    ports:
      - ${GOISTOR_MINIO_PORT_API:-9000}:9000
      - ${GOISTOR_MINIO_PORT_CONSOLE:-9001}:9001
    volumes:
      - thinmbahad_storage:/data
    deploy:
      labels:
        - homepage.description=File storage server
        - homepage.href=${GOISTOR_MINIO_URL:-http://localhost}
        - homepage.icon=minio.svg
        - homepage.instance.admin.group=Goistor
        - homepage.instance.admin.name=Minio
        - homepage.instance.public.group=Organization
        - homepage.instance.public.name=Cloud Storage
      placement:
        constraints: [node.hostname == raedorvudh]
  
  # MySQL/MariaDB (https://github.com/yobasystems/alpine-mariadb)
  mysql:
    image: yobasystems/alpine-mariadb:latest
    container_name: goistor-mysql
    environment:
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      TZ: ${TZ:-America/Los_Angeles}
      MYSQL_ROOT_PASSWORD: ${ROOT_PASSWORD:-changeMe}
      MYSQL_USER: ${ROOT_USERNAME:-root}
      MYSQL_PASSWORD: ${ROOT_PASSWORD:-changeMe}
    networks:
      - gulhir
    ports:
      - ${MYSQL_PORT:-3306}:3306
    restart: always
    volumes:
      - ${GOISTOR_MYSQL_PATH:-./mysql}:/var/lib/mysql
    deploy:
      labels:
        - homepage.instance.admin.description=MySQL/MariaDB database
        - homepage.instance.admin.icon=mysql.svg
        - homepage.instance.admin.group=Goistor
        - homepage.instance.admin.name=MySQL
      placement:
        constraints: [node.labels.goistor == true]

  # PHPMyAdmin (https://github.com/phpmyadmin/docker)
  phpmyadmin:
    image: lscr.io/linuxserver/phpmyadmin:latest
    container_name: goistor-phpmyadmin
    environment:
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      TZ: ${TZ:-America/Los_Angeles}
      PMA_HOST: mysql
      PMA_PASSWORD: ${GOISTOR_PHPMYADMIN_PASSWORD:-changeMe}
      PMA_PMADB: phpmyadmin
      PMA_USER: ${GOISTOR_PHPMYADMIN_USERNAME:-nickmin}
    networks:
      - gulhir
    ports:
      - ${GOISTOR_PHPMYADMIN_PORT:-80}:80
    restart: always
    volumes:
      - ${GOISTOR_PHPMYADMIN_PATH:-./phpmyadmin}:/config
    depends_on:
      - mysql
    deploy:
      labels:
        - homepage.instance.admin.group=Goistor
        - homepage.instance.admin.name=PHPMyAdmin
        - homepage.instance.admin.description=MySQL/MariaDB database management
        - homepage.instance.admin.icon=phpmyadmin.svg
        - homepage.instance.admin.href=${GOISTOR_PHPMYADMIN_URL:-http://localhost}
      placement:
        constraints: [node.labels.goistor == true]

  # PGAdmin (https://www.pgadmin.org)
  postgres-admin:
    image: dpage/pgadmin4:latest
    container_name: goistor-postgres-admin
    environment:
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      TZ: ${TZ:-America/Los_Angeles}
      PGADMIN_DEFAULT_EMAIL: ${ROOT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${ROOT_PASSWORD:-changeMe}
    networks:
      - gulhir
    ports:
      - ${GOISTOR_POSTGRES_ADMIN_PORT:-15432}:80
    restart: always
    volumes:
      - ${GOISTOR_POSTGRES_ADMIN_PATH:-./postgres-admin}:/var/lib/pgadmin/
    depends_on:
      - postgres
    deploy:
      labels:
        - homepage.instance.admin.group=Goistor
        - homepage.instance.admin.name=PG Admin
        - homepage.instance.admin.description=MySQL/MariaDB database management
        - homepage.instance.admin.icon=pgadmin.svg
        - homepage.instance.admin.href=${GOISTOR_POSTGRES_ADMIN_URL:-http://localhost}
      placement:
        constraints: [node.labels.goistor == true]

  # Postgres (https://hub.docker.com/_/postgres)
  postgres:
    image: postgres:16.4
    container_name: goistor-postgres
    environment:
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      TZ: ${TZ:-America/Los_Angeles}
      POSTGRES_USER: ${ROOT_USERNAME:-changeMe}
      POSTGRES_PASSWORD: ${ROOT_PASSWORD:-changeMe}
      POSTGRES_DB: postgres
    networks:
      - gulhir
    ports:
      - ${POSGRES_PORT:-5432}:5432
    restart: always
    volumes:
      - ${GOISTOR_POSTGRES_PATH:-./postgres}:/var/lib/postgresql/data/
    deploy:
      labels:
        - homepage.instance.admin.group=Goistor
        - homepage.instance.admin.name=PostgreSQL
        - homepage.instance.admin.description=PostgreSQL database
        - homepage.instance.admin.icon=postgresql.svg
      placement:
        constraints: [node.labels.goistor == true]

  # Redis (https://github.com/docker-library/redis)
  redis:
    image: redis:8.0-alpine
    container_name: goistor-redis
    environment:
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      TZ: ${TZ:-America/Los_Angeles}
    networks:
      - gulhir
    ports:
      - ${REDIS_PORT:-6379}:6379
    restart: always
    volumes:
      - ${GOISTOR_REDIS_PATH:-./redis}:/data
    deploy:
      labels:
        - homepage.instance.admin.group=Goistor
        - homepage.instance.admin.name=Redis
        - homepage.instance.admin.description=Redis memory cache
        - homepage.instance.admin.icon=redis.svg
      placement:
        constraints: [node.labels.goistor == true]

  # Redis Insight (https://github.com/docker-library/redis)
  redis-insight:
    image: redis/redisinsight:latest
    container_name: goistor-redis-insight
    environment:
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      TZ: ${TZ:-America/Los_Angeles}
    networks:
      - gulhir
    ports:
      - ${GOISTOR_REDIS_INSIGHT_PORT:-5540}:5540
    restart: unless-stopped
    volumes:
      - ${GOISTOR_REDIS_INSIGHT_PATH:-./redis-insight}:/data
    depends_on:
      - redis
    deploy:
      labels:
        - homepage.instance.admin.group=Goistor
        - homepage.instance.admin.name=Redis Insight
        - homepage.instance.admin.description=Redis GUI
        - homepage.instance.admin.icon=redis.svg
      placement:
        constraints: [node.hostname == raedorvudh]

networks:
  gulhir:
    external: true

volumes:
  thinmbahad_storage:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${NFS_IP},${NFS_OPTIONS}
      device: :${THINMBAHAD_PATH}/95.Storage
